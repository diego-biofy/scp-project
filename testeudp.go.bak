package main

import (
	"fmt"
	"log"
	"net"
	"strings"
)

const scp_ack = "ACK"
const scp_err = "ERR"
const scp_join = "JOIN"

func checkErr(err error) {
	if err != nil {
		log.Fatal(err)
	}
}

func scp_splitparam(param string) (string, string) {
	scp_data := strings.Split(param, "/")
	if len(scp_data) < 2 {
		return scp_err, scp_err
	}
	return scp_data[0], scp_data[1]
}

func scp_master_udp() {

	con, err := net.ListenPacket("udp", ":7007")
	checkErr(err)
	defer con.Close()

	for {
		reply := make([]byte, 1024)
		_, addr, err := con.ReadFrom(reply)
		checkErr(err)

		fmt.Println("msg recebida:", string(reply))
		fmt.Println("origem:", addr)

		scp_command, scp_slave_addr := scp_splitparam(string(reply))
		fmt.Println("SCP COMM", scp_command, "SCP DATA", scp_slave_addr)

		if scp_command == scp_join {
			fmt.Println("JOIN recebido de ", scp_slave_addr)
			_, err = con.WriteTo([]byte(scp_ack), addr)
			checkErr(err)
		}

		if scp_command == scp_ack {
			fmt.Println("ACK recebido de ", scp_slave_addr)
			_, err = con.WriteTo([]byte(scp_ack), addr)
			checkErr(err)
		}

	}
}

func main() {

	scp_master_udp()

}
